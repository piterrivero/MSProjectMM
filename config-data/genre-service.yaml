server:
  port: ${PORT:${SERVER_PORT:0}}
  
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka
    instance:
      instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

spring:
  data:
    mongodb:
      host: localhost
      port: 27003
      database: genre
  application:
    zipkin: http://localhost:9411
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: group-default #group-id that will ne used by default   
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.notification"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    
springdoc:
  swagger-ui:
    path: /genre/swagger-ui.html
  api-docs:
    path: /genre/v3/api-docs
  packagesToScan: com.genre.service.controller