server:
  port: ${PORT:${SERVER_PORT:0}}
  
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka
    instance:
      instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

spring:
  data:
    mongodb:
      host: localhost
      port: 27006
      database: payment
  application:
    zipkin: http://localhost:9411
  kafka:
    bootstrap-servers: localhost:29092,localhost:39092
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    
springdoc:
  swagger-ui:
    path: /payment/swagger-ui.html
  api-docs:
    path: /payment/v3/api-docs
  packagesToScan: com.payment.service.controller